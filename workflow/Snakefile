# import required libraries
from pathlib import Path
from os.path import join as pjoin
import pandas as pd

# read the configuration file
configfile: "../conf/config_finemap.yaml"

# introduce the wildcard variable
seqid = config["sample_seqids"]

# define teh functions generating files' path
def ws_path(file_path):
    return str(pjoin(config.get("path_base"), file_path))

def db_path(file_path):
    return str(Path(config.get("path_data"), file_path))

def ss_path(file_path):
    return str(Path(config.get("path_pwas"), file_path))


rule all:
    input:
        expand(
            ws_path("logs/cojo/seq.{i}.log"), 
            #ws_path("output/break/seq.{i}/seq.{i}_loci.tsv"),
            i = seqid
        )

# rule munge_sumstats:
#     input:
#         ifile = ss_path("seq.{i}/seq.{i}.regenie.tsv.gz")
#     output:
#         ofile = ws_path("output/munge/seq.{i}_dataset.rds")
#     params:
#         codes = config.get("path_code"),
#         ofile = ws_path("output/munge/seq.{i}")
#     log:
#         ws_path("logs/munge/seq.{i}.log")
#     resources:
#         mem_mb = 16000, runtime = 60
# #    conda:
# #        "envs/r_environment.yml"
# #    container:
# #        "docker://quay.io/biocontainers/plink2:2.00a5--h4ac6f70_0"
#     shell:
#         """
#         source ~/.bashrc && \
#         conda activate r_finemap &&  \
#         Rscript scripts/s01_sumstat_munging.R  \
#             --pipeline_path {params.codes}  \
#             --input {input.ifile}  \
#             --is_molQTL FALSE  \
#             --type quant  \
#             --s NA  \
#             --study_id {params.ofile}
#         """


# rule align_sumstats:
#     input:
#         ifile = ws_path("output/munge/seq.{i}_dataset.rds")
#     output:
#         ifile = ws_path("output/align/seq.{i}/seq.{i}_chr{chrom}_dataset_aligned.tsv.gz"),
#         #lfile = expand(ws_path("output/align/seq.{i}_chr{chrom}_snplist.tsv"), i = seqid, chrom = range(1, 23)),
#         #mfile = expand(ws_path("output/align/seq.{i}_chr{chrom}_map.tsv"), i = seqid, chrom = range(1, 23))
#     params:
#         codes = config.get("path_code"),
#         ofile = ws_path("output/align/seq.{i}/seq.{i}"),
#         chro  = "{chrom}"
#     #log:
#     #    ws_path("logs/align/seq.{i}_chr{chrom}.log")
#     #conda:
#     #    "envs/r_envirnonment.yml"
#     resources:
#         mem_mb = 8000, runtime = 60
#     shell:
#         """
#         source ~/.bashrc && \
#         conda activate r_finemap &&  \
#         Rscript scripts/s02_sumstat_alignment.R  \
#             --pipeline_path {params.codes}  \
#             --dataset {input.ifile}  \
#             --chr_tabix {params.chro}  \
#             --grch 38  \
#             --study_id {params.ofile}
#         """


rule break_locus:
    input:
        gwas = ss_path("seq.{i}.gwas.regenie.gz")
        #ifile = expand(ws_path("output/align/seq.{i}/seq.{i}_chr{chrom}_dataset_aligned.tsv.gz"), i = seqid, chrom = range(1, 23))
    output:
        loci = ws_path("output/break/seq.{i}/seq.{i}_loci.tsv"),
    params:
        codes = config.get("path_code"),
        ifile = ss_path("seq.{i}"),
        ofile = ws_path("output/break/seq.{i}/seq.{i}"),
        seque = "seq.{i}",
        p1    = config.get('thresholds', 'p1'),
        p2    = config.get('thresholds', 'p2'),
        hole  = config.get('thresholds', 'hole')
    log:
        ws_path("logs/break/seq.{i}.log")
    resources:
        mem_mb = 8000, runtime = 60
    shell:
        """
        source ~/.bashrc && \
        conda activate r_finemap &&  \
        Rscript scripts/s03_locus_breaker.R  \
            --pipeline_path {params.codes}  \
            --input {input.gwas}  \
            --study_id  {params.ofile}  \
            --p_thresh1 {params.p1}  \
            --p_thresh2 {params.p2}  \
            --hole   {params.hole} \
            --outdir {params.ofile}  2> {log}
        """


rule run_cojo:
    input:
        gwas = ss_path("seq.{i}.gwas.regenie.gz"),
        loci = ws_path("output/break/seq.{i}/seq.{i}_loci.tsv")
    output:
        odir = ws_path("output/cojo/seq.{i}/"),
        log  = ws_path("logs/cojo/seq.{i}.log")
    params:
        codes = config.get("path_code"),
        geno  = config.get("path_geno"),
        ofile = ws_path("output/cojo/seq.{i}/seq.{i}"),
        ppp   = config.get('thresholds', 'ppp')
    log:
        ws_path("logs/cojo/seq.{i}.log")
    resources:
        mem_mb = 8000, runtime = 60
    run:
        # read the loci and loop over each locus
        with open(input.loci) as f:
            next(f)  # Skip the header row
            for line in f:
                chr, beg, end = line.strip().split('\t')[:3]
                shell("""
                source ~/.bashrc && \
                conda activate r_finemap &&  \
                Rscript scripts/s04_cojo_finemapping.R  \
                --pipeline_path   {params.codes}  \
                --dataset_aligned {input.gwas}  \
                --study_id {params.ofile}  \
                --chr   {chr}  \
                --start {beg}  \
                --end   {end}  \
                --bfile {params.geno} \
                --cs_thresh {params.ppp}  \
                --outdir {output.odir} \
                --phenotype_id full  \
                --nf_hcoloc_v no_nf  2>> {log}
                """
                )
